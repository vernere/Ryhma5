name: CI
on:
  push:
    branches:
      - 'ccr'
    paths:
      - 'App/frontend/**'
      - '.github/workflows/ci.yaml'

jobs:
  test:
    env:
      VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
      VITE_SUPABASE_PUBLISHABLE_KEY: ${{ secrets.VITE_SUPABASE_PUBLISHABLE_KEY }}

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
          cache-dependency-path: ./App/frontend/bun.lock

      - name: Install dependencies
        working-directory: ./App/frontend
        run: bun install --frozen-lockfile

      - name: Create coverage directories
        working-directory: ./App/frontend
        run: mkdir -p coverage/{unit,e2e,merged}

      - name: Install coverage tools
        working-directory: ./App/frontend
        run: |
          npm install -g nyc
          npm install -D c8

      - name: Run unit tests with coverage
        working-directory: ./App/frontend
        run: |
          echo "Running unit tests with coverage..."
          c8 --reporter=lcov --reporter=text-summary bun test
          mkdir -p coverage/unit
          mv coverage/lcov.info coverage/unit/lcov.info || true

      - name: Run Cypress e2e tests
        working-directory: ./App/frontend
        run: |
          echo "Starting dev server..."
          bun run dev &
          sleep 15
          echo "Development server should be ready..."
          
          echo "Running Cypress tests with coverage..."
          CYPRESS_COVERAGE=true bunx cypress run --config video=false
          
          echo "Stopping dev server..."
          pkill -f "bun run dev" || true

      - name: Generate merged coverage report
        working-directory: ./App/frontend
        run: |
          echo "Setting up coverage directories..."
          mkdir -p coverage/merged
          
          echo "Checking for coverage files..."
          if [ -f coverage/unit/lcov.info ]; then
            echo "Found unit test coverage"
            cp coverage/unit/lcov.info coverage/merged/
          fi
          
          if [ -f coverage/lcov.info ]; then
            echo "Found E2E test coverage"
            if [ -f coverage/merged/lcov.info ]; then
              cat coverage/lcov.info >> coverage/merged/lcov.info
            else
              cp coverage/lcov.info coverage/merged/
            fi
          fi
          
          echo "Coverage directory structure:"
          ls -R coverage/
          
          if [ ! -f coverage/merged/lcov.info ]; then
            echo "No coverage files found, creating empty lcov.info"
            touch coverage/merged/lcov.info
          fi

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with: 
          directory: ./App/frontend/coverage/merged
          files: ./lcov.info
          flags: merged
          name: merged-coverage
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
          