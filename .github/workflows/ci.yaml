name: CI
on:
  push:
    branches:
      - 'ccr'
    paths:
      - 'App/frontend/**'
      - '.github/workflows/ci.yaml'

jobs:
  test:
    env:
      VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
      VITE_SUPABASE_PUBLISHABLE_KEY: ${{ secrets.VITE_SUPABASE_PUBLISHABLE_KEY }}

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
          cache-dependency-path: ./App/frontend/bun.lock

      - name: Install dependencies
        working-directory: ./App/frontend
        run: bun install --frozen-lockfile

      - name: Create coverage directories
        working-directory: ./App/frontend
        run: mkdir -p coverage/{unit,e2e,merged}

      - name: Run unit tests with coverage
        working-directory: ./App/frontend
        run: |
          echo "Running unit tests with coverage..."
          bun test --coverage
          echo "Checking for coverage files..."
          find . -name "coverage-final.json" -type f
          mkdir -p coverage/unit
          find . -name "coverage-final.json" -type f -exec cp {} coverage/unit/ \;

      - name: Run Cypress e2e tests
        working-directory: ./App/frontend
        run: |
          echo "Starting dev server..."
          bun run dev &
          sleep 15
          echo "Development server should be ready..."
          CYPRESS_COVERAGE=true bunx cypress run --config video=false || true
          echo "Checking for Cypress coverage files..."
          find . -name "coverage-final.json" -type f
          mkdir -p coverage/e2e
          find . -name "coverage-final.json" -type f -exec cp {} coverage/e2e/cypress-coverage.json \;
          pkill -f "bun run dev" || true

      - name: Merge coverage reports
        working-directory: ./App/frontend
        run: |
          echo "Debug: Listing all coverage files..."
          find . -name "coverage-final.json" -type f
          
          echo "Debug: Coverage directory structure..."
          tree coverage || ls -R coverage
          
          mkdir -p coverage/merged
          
          # Copy any coverage files we find to merged directory
          if [ -f coverage/unit/coverage-final.json ]; then
            echo "Found unit test coverage"
            cp coverage/unit/coverage-final.json coverage/merged/unit-coverage.json
          fi
          
          if [ -f coverage/e2e/cypress-coverage.json ]; then
            echo "Found E2E test coverage"
            cp coverage/e2e/cypress-coverage.json coverage/merged/e2e-coverage.json
          fi
          
          # List files in merged directory
          echo "Files in merged directory:"
          ls -la coverage/merged/
          
          if [ -f coverage/merged/unit-coverage.json ] || [ -f coverage/merged/e2e-coverage.json ]; then
            echo "Running coverage merge script..."
            node scripts/merge-coverage.js
          else
            echo "No coverage files found to merge"
            echo '{"coverageMap":{}}' > coverage/merged/coverage-final.json
          fi

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with: 
          directory: ./coverage/merged/
          flags: merged
          name: merged-coverage
          fail_ci_if_error: true
          